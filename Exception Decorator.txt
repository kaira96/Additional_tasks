Exception Decorator
Write a decorator that makes sure that only a particular type of exception is raised by the function.

﻿

Useful links:

﻿https://docs.python.org/2/library/functools.html﻿
﻿https://stackoverflow.com/questions/308999/what-does-functools-wraps-do﻿
﻿https://pythontips.com/2013/08/04/args-and-kwargs-in-python-explained/﻿
﻿https://www.datacamp.com/community/tutorials/exception-handling-python﻿
﻿

Tips:

Create class User with proper methods:
get_account_balance(),  change_password()
Create decorator to handle errors, listed below
﻿

﻿

Input

Copy
u = User()
u.get_account_balance()
﻿

Output:

Copy
Traceback (most recent call last):
  File "main.py", line 159, in <module>
    u.get_account_balance()
  File "main.py", line 134, in wrapper
    raise Exception("No username defined!")
Exception: No username defined!
﻿

Input:

Copy
u = User()
u.change_password()
Output

Copy
Traceback (most recent call last):
  File "main.py", line 159, in <module>
    u.change_pasword()
  File "main.py", line 134, in wrapper
    raise Exception("No password to change!")
Exception: No password to change!
﻿