DB Relations
Copy
CREATE DATABASE library 
CHARACTER SET utf8
COLLATE utf8_general_ci;
﻿
USE library;
﻿
/// One to many
CREATE TABLE author (
id int not null auto_increment primary key,
name VARCHAR(50) NOT NULL,
surname VARCHAR(50) NOT NULL)
ENGINE=InnoDB;
﻿
SELECT @@default_storage_engine;
﻿
CREATE TABLE book (
id int not null auto_increment primary key,
title varchar(100) not null,
id_author int not null,
constraint author_book_fk
foreign key (id_author)
references author(id))
ENGINE=InnoDB;
﻿
INSERT INTO author (id, name, surname)
VALUES (NULL, 'Chingiz', 'Aitmatov');
﻿
SELECT  FROM author;
﻿
INSERT INTO author (id, name, surname) 
VALUES
(NULL, 'Alykul', 'Osmonov'),
(NULL, 'Aleksandr', 'Pushkin'),
(NULL, 'Dmitri', 'Duma');
﻿
SELECT  FROM author;
﻿
INSERT INTO book (id, title, id_author)
VALUES
(NULL, 'Когда падают горы', 1),
(NULL, 'Белое облако Чингисхана', 1),
(NULL, 'Биринчи мугалим', 1),
(NULL, 'Жамиля', 1),
(NULL, 'Плаха', 1);
﻿
SELECT  FROM book;
﻿
INSERT INTO book 
(id, title, id_author)
VALUES
(NULL, 'Капитанская дочка', 3),
(NULL, '30 Жаш ыры', 2),
(NULL, '3 мушкетера', 4);
﻿
SELECT  FROM book;
﻿
SELECT  FROM author;
﻿
UPDATE author
SET name = 'Aleksandr'
WHERE id = 4;
﻿
SELECT  FROM author;
﻿
SELECT  FROM book;
﻿
SELECT title FROM book
JOIN author
ON book.id_author = author.id;
﻿
SELECT title, name, surname FROM book JOIN author ON book.id_author = author.id;
﻿
SELECT title, name, surname FROM book
JOIN author
ON book.id_author = author.id;
﻿
SELECT title, name, surname FROM author
JOIN book
ON author.id = book.id_author;
﻿
ALTER TABLE book
ADD published INT(4);
﻿
SELECT  FROM book;
﻿
UPDATE book
SET published = 1985;
﻿
SELECT  FROM book;
﻿
ALTER TABLE book
DROP COLUMN published;
﻿
SELECT  FROM book;
﻿
ALTER TABLE book 
ADD published INT(4);
﻿
SELECT  FROM book;
﻿
UPDATE book 
SET published = '1985-12-12';
﻿
SELECT  FROM book;
﻿
///One To One
;
﻿
INSERT INTO bio 
(id, author_id, description)
VALUES in
(NULL, 1, 'Famous kyrgyz writer, who was born in Sheker village in KR'),
(NULL, 2, 'Famous kyrgyz poetry, who was born in Kyrchyn village in KR');
﻿
SEsLECT  FROM bio;
﻿
INSERT INTO bio (horid, author_id, description) VALUES (NULL, 3, 'One to one');
﻿
INSERT INTO bio (id, author_id, description) VALUES (NULL, 4, 'One to one');
﻿
SELECT  FROM bio;
﻿
SELECT name, surname, description FROM bio
JOIN author
ON bio.author_id = author.id;
﻿
///Many To Many
﻿
CREATE TABLE genre (
id int not null auto_increment PRIMARY KEY,
g_title varchar(255) not null)
ENGINE=InnoDB;
﻿
show tables;
﻿
CREATE TABLE book_genre (
id int not null auto_increment PRIMARY KEY,
id_book int not null,
id_genre int not null,
foreign key (id_book)
references book(id)
on delete no action
on update no action,
foreign key (id_genre)
references genre(id)
on delete no action
on update no action)
ENGINE=InnoDB;
﻿
show tables;
﻿
SELECT  FROM book;
﻿
INSERT INTO genre
(id, g_title)
VALUES
(NULL, 'action'),
(NULL, 'comedy'),
(NULL, 'novel'),
(NULL, 'poetry');
﻿
SELECT  FROM genre;
﻿
SELECT  FROM book;
﻿
INSERT INTO book_genre
(id, id_book, id_genre)
VALUES
(NULL, 1, 1),
(NULL, 1, 3);
﻿
SELECT  FROM book_genre;
﻿
 SELECT title, g_title FROM book_genre
 JOIN book
 ON book.id = book_genre.id_book
 JOIN genre 
 ON genre.id = book_genre.id_genre;
﻿
INSERT INTO book_genre
(id, id_book, id_genre)
VALUES 
(NULL, 6, 1),
(NULL, 8, 1),
(NULL, 4, 3);
﻿
SELECT title, g_title FROM book_genre
JOIN book
ON book.id = book_genre.id_book
JOIN genre
ON genre.id = book_genre.id_genre;